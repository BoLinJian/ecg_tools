function [stmp t cuts sfhPot sfbPot] = segment_Twave_paramBased(param, tmp, fhPot, fbPot, beatEnd)
%%HELP:
%		segment_Twave_paramBased:
%			This function segments the heartbeats using the repolarization
%			and depolarization information given if the tmp's have been
%			generated by the parametric function defined in ECGsim.
%
%		INPUT:
%			- param - <1,P>cell - base parameters each cell contains the values for a
%				parameter of all nodes in the heart.
%				The parameter order is:
%						dep, rep, b1, b2, b3, ampl, rest
%			- tmp - <M,N>double - matrix containing the tmp series of N
%			samples for the M points on the heart.
%			- fhPot - <M,N>double - matrix containing the heart potentials series of N
%			samples for the M points on the heart.
%			- fbPot - <L,N>double - matrix containing the torso potentials series of N
%			samples for the L points on the torso.
%			- beatEnd - <1,NB-1>int - indicates the indices where each beat
%			finishes.
%
%		OUTPUT:
%			- stmp - <1,M>cell - each cell contains a beat of the tmp.
%			- sfhPot - <1,M>cell - each cell contains a beat of the heart potentials.
%			- sfbPot - <1,M>cell - each cell contains a beat of the torso potentials.
%			- cuts - <1,M+2>int - separation indices.
%
%		PROCESS:
%
%		DEPENDENCES:
%
%		AUTHOR:
%			Jaume Coll-Font <jcollfont@gmail.com>
%
%

	%% DEFINE
		marginS = 10;
		marginE = 20;
		N = size(tmp,2);
		beatSize = N/2;
	
	%% Extract parameters
		dep = param{1};
		rep = param{2};
		
		[M NB] = size(dep);
		
	%% Find the start of Twaves
		startT = ceil(max(dep,[],1)) + marginS + [0 beatEnd(1:end-1)];%+ ceil(beatSize*[0:NB-1]);
		
	%% Find the end of the Twaves
		endT = beatEnd - marginE;%floor(min(dep,[],1)) - marginE %+ ceil(beatSize*[0:NB-1]);
		
	%% define cuts
		cuts = [startT(1:end) ; endT(1:end) ];
		cuts = reshape(cuts,1,numel(cuts));
% 		cuts = [cuts(1:end-1) N];
		
	%% segment the waveforms
		stmp = cell(1,NB);
		sfhPot = cell(1,NB);
		sfbPot = cell(1,NB);
		t = cell(1,NB);
		count  = 1;
		for nb = 1:2:2*NB
			t{count} = cuts(nb):cuts(nb+1);
			stmp{count} = tmp(:,t{count});
			sfhPot{count} = fhPot(:,t{count});
			sfbPot{count} = fbPot(:,t{count});
			count  = count +1;
		end

	%% Plot
% 		figure;
% 		hold on;
% 		plot(fbPot','b');
% 		for nb = 1:2:2*NB
% 			line([cuts(nb) cuts(nb)],[-100 50],'Color','g');
% 			line([cuts(nb+1) cuts(nb+1)],[-100 50],'Color','r');
% 		end
% 		hold off;
end





